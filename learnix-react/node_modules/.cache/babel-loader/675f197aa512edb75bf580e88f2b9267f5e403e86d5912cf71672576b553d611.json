{"ast":null,"code":"var _jsxFileName = \"/home/atharva-manchalkar/vscode/temp/Learn-Sign-Language/learnix-react/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [currentSign, setCurrentSign] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n  const handSigns = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  const generateRandomSign = () => {\n    const randomIndex = Math.floor(Math.random() * handSigns.length);\n    setCurrentSign(handSigns[randomIndex]);\n  };\n  useEffect(() => {\n    generateRandomSign();\n  }, []);\n  const handleSubmitAnswer = () => {\n    if (userAnswer.toUpperCase() === currentSign) {\n      setScore(score + 1);\n      setResultMessage('Correct! Well done.');\n    } else {\n      setResultMessage(`Wrong! The correct answer is ${currentSign}.`);\n    }\n    generateRandomSign();\n    setUserAnswer('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quizContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Identify the hand sign shown below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"quizImage\",\n      src: `${process.env.PUBLIC_URL}/hand_signs/${currentSign}.png`,\n      alt: \"Hand Sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"answerInput\",\n      placeholder: \"Enter your answer (A-Z)\",\n      value: userAnswer,\n      onChange: e => setUserAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"submitAnswerBtn\",\n      onClick: handleSubmitAnswer,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"resultMessage\",\n      children: resultMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/lesson\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"goBackToLessonsBtn\",\n        children: \"Go Back to Lessons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"lmyGC6/Qmcs0iRA3f7Z05gF4YN0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Quiz","_s","score","setScore","currentSign","setCurrentSign","userAnswer","setUserAnswer","resultMessage","setResultMessage","handSigns","generateRandomSign","randomIndex","Math","floor","random","length","handleSubmitAnswer","toUpperCase","id","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["/home/atharva-manchalkar/vscode/temp/Learn-Sign-Language/learnix-react/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Quiz() {\n  const [score, setScore] = useState(0);\n  const [currentSign, setCurrentSign] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [resultMessage, setResultMessage] = useState('');\n\n  const handSigns = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  const generateRandomSign = () => {\n    const randomIndex = Math.floor(Math.random() * handSigns.length);\n    setCurrentSign(handSigns[randomIndex]);\n  };\n\n  useEffect(() => {\n    generateRandomSign();\n  }, []);\n\n  const handleSubmitAnswer = () => {\n    if (userAnswer.toUpperCase() === currentSign) {\n      setScore(score + 1);\n      setResultMessage('Correct! Well done.');\n    } else {\n      setResultMessage(`Wrong! The correct answer is ${currentSign}.`);\n    }\n    generateRandomSign();\n    setUserAnswer('');\n  };\n\n  return (\n    <div id=\"quizContent\">\n      <h2>Identify the hand sign shown below:</h2>\n      <img id=\"quizImage\" src={`${process.env.PUBLIC_URL}/hand_signs/${currentSign}.png`} alt=\"Hand Sign\" />\n      <input\n        type=\"text\"\n        id=\"answerInput\"\n        placeholder=\"Enter your answer (A-Z)\"\n        value={userAnswer}\n        onChange={(e) => setUserAnswer(e.target.value)}\n      />\n      <button id=\"submitAnswerBtn\" onClick={handleSubmitAnswer}>Submit Answer</button>\n      <p id=\"resultMessage\">{resultMessage}</p>\n      <p>Score: <span id=\"score\">{score}</span></p>\n      <Link to=\"/lesson\">\n        <button id=\"goBackToLessonsBtn\">Go Back to Lessons</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}