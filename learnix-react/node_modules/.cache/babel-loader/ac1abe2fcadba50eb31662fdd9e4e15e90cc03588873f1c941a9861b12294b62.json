{"ast":null,"code":"var _jsxFileName = \"/home/atharva-manchalkar/vscode/temp/Learn-Sign-Language/learnix-react/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [randomSign, setRandomSign] = useState(null);\n  const generateRandomSign = () => {\n    const signs = ['A', 'B', 'C', 'D', 'E']; // Add more signs as needed\n    const randomIndex = Math.floor(Math.random() * signs.length);\n    return signs[randomIndex];\n  };\n  useEffect(() => {\n    setRandomSign(generateRandomSign());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), randomSign && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hand-sign\",\n      \"data-sign\": randomSign,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `hand_signs/${randomSign}.png`,\n        alt: `${randomSign} Hand Sign`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: randomSign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"85ypAZzrlm0M41+Q712z7I4gEEY=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","randomSign","setRandomSign","generateRandomSign","signs","randomIndex","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["/home/atharva-manchalkar/vscode/temp/Learn-Sign-Language/learnix-react/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Quiz() {\n  const [randomSign, setRandomSign] = useState(null);\n\n  const generateRandomSign = () => {\n    const signs = ['A', 'B', 'C', 'D', 'E']; // Add more signs as needed\n    const randomIndex = Math.floor(Math.random() * signs.length);\n    return signs[randomIndex];\n  };\n\n  useEffect(() => {\n    setRandomSign(generateRandomSign());\n  }, []);\n\n  return (\n    <div>\n      <h2>Quiz</h2>\n      {randomSign && (\n        <div className=\"hand-sign\" data-sign={randomSign}>\n          <img src={`hand_signs/${randomSign}.png`} alt={`${randomSign} Hand Sign`} />\n          <p>{randomSign}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACzC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC;IAC5D,OAAOL,KAAK,CAACC,WAAW,CAAC;EAC3B,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdM,aAAa,CAACC,kBAAkB,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZb,UAAU,iBACTH,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAC,aAAWd,UAAW;MAAAS,QAAA,gBAC/CZ,OAAA;QAAKkB,GAAG,EAAE,cAAcf,UAAU,MAAO;QAACgB,GAAG,EAAE,GAAGhB,UAAU;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5EhB,OAAA;QAAAY,QAAA,EAAIT;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAxBQD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AA0Bb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}